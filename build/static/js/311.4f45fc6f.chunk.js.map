{"version":3,"file":"static/js/311.4f45fc6f.chunk.js","mappings":"uPAOMA,EAAM,SAACC,GACZ,OAAcC,EAAAA,EAAAA,KAAO,0BAASC,KAAM,EAAGC,SAAU,CAAC,EAAG,EAAG,IAAOH,EAAK,IAA7DI,GAAiE,YAA9D,GACV,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAC1B,GAAeC,EAAAA,EAAAA,GAAUC,EAAAA,EAAe,CAAC,aAAlCC,GAA8C,YAA1C,GAEX,OACC,kBAAMN,IAAKA,EAAKO,MAAOL,EAAU,EAAI,EAAGM,QAAS,kBAAML,GAAYD,EAAQ,EAAC,WAC3E,4BACA,iCAAsBO,kBAAmB,GAAKC,IAAKJ,MAGtD,EAEMK,EAAS,SAACf,GACf,OAAcgB,EAAAA,EAAAA,KAAU,0BAASd,KAAM,EAAGC,SAAU,CAAC,EAAG,EAAG,IAAOH,EAAK,IAAhEI,GAAoE,YAAjE,GAEV,GAAeI,EAAAA,EAAAA,GAAUC,EAAAA,EAAe,CAAC,aAAlCC,GAA8C,YAA1C,GAGX,OACC,kBACCN,IAAKA,EACLO,MAAO,EAAE,WAGT,+BACA,iCAAsBE,kBAAmB,GAAKC,IAAKJ,MAGtD,EAEA,SAASO,IACR,OAA0BC,EAAAA,EAAAA,KAAlBC,EAAM,EAANA,OAAQC,EAAK,EAALA,MACVC,EAAM,IAAIC,EAAAA,QAEhB,OAAOC,EAAAA,EAAAA,IAAS,WACfJ,EAAOhB,SAASqB,KAAKH,EAAII,IAAIL,EAAMM,EAAGN,EAAMO,EAAGR,EAAOhB,SAASyB,GAAI,KACnET,EAAOU,OAAO,EAAG,EAAG,EAErB,GACD,CAEA,SAASC,EAAM9B,GACd,OAAeQ,EAAAA,EAAAA,GAAUC,EAAAA,EAAe,CAAC,aAAlCC,GAA8C,YAA1C,GAEX,GAAcqB,EAAAA,EAAAA,KAAS,0BACtBC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,IACzBlC,EAAK,IAFFI,GAGJ,YAHO,GAKV,OACC,kBAAMA,IAAKA,EAAI,WACd,0BAAe+B,KAAM,CAAC,GAAI,OAC1B,iCAAsBtB,kBAAmB,GAAKC,IAAKJ,MAGtD,CAEA,IAqBA,EArBiB,WAChB,OACC,+BACC,iBAAM0B,UAAU,aAAY,UAC3B,SAAC,EAAAC,SAAQ,CAACC,SAAU,KAAK,UACxB,SAAC,KAAM,WACN,UAAC,KAAO,YACP,yBAAcC,UAAW,MACzB,uBAAYpC,SAAU,CAAC,GAAI,GAAI,OAC/B,SAACY,EAAM,CAACZ,SAAU,CAAC,EAAG,GAAI,MAC1B,SAACJ,EAAG,CAACI,SAAU,CAAC,EAAG,GAAI,MACvB,SAAC2B,EAAK,CAAC3B,SAAU,CAAC,GAAI,GAAI,MAC1B,SAACc,EAAG,cAOX,C","sources":["components/pages/MainPage/MainPage.jsx"],"sourcesContent":["import './style.css';\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport { Canvas, useLoader, useThree, useFrame } from '@react-three/fiber';\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\r\nimport { Physics, usePlane, useBox, useSphere } from '@react-three/cannon';\r\nimport { Vector3 } from 'three';\r\n\r\nconst Box = (props) => {\r\n\tconst [ref] = useBox(() => ({ mass: 1, position: [0, 5, 0], ...props }));\r\n\tconst [clicked, setClicked] = useState(false);\r\n\tconst [wood] = useLoader(TextureLoader, ['wood.jpg']);\r\n\r\n\treturn (\r\n\t\t<mesh ref={ref} scale={clicked ? 2 : 1} onClick={() => setClicked(!clicked)}>\r\n\t\t\t<boxGeometry />\r\n\t\t\t<meshStandardMaterial displacementScale={0.5} map={wood} />\r\n\t\t</mesh>\r\n\t);\r\n};\r\n\r\nconst Sphere = (props) => {\r\n\tconst [ref] = useSphere(() => ({ mass: 1, position: [0, 5, 0], ...props }));\r\n\r\n\tconst [wood] = useLoader(TextureLoader, ['wood.jpg']);\r\n\r\n\r\n\treturn (\r\n\t\t<mesh\r\n\t\t\tref={ref}\r\n\t\t\tscale={1}\r\n\t\t\t\r\n\t\t>\r\n\t\t\t<sphereGeometry />\r\n\t\t\t<meshStandardMaterial displacementScale={0.2} map={wood} />\r\n\t\t</mesh>\r\n\t);\r\n};\r\n\r\nfunction Rig() {\r\n\tconst { camera, mouse } = useThree();\r\n\tconst vec = new Vector3();\r\n\r\n\treturn useFrame(() => {\r\n\t\tcamera.position.lerp(vec.set(mouse.x, mouse.y, camera.position.z), 0.55);\r\n\t\tcamera.lookAt(0, 0, 0);\r\n\r\n\t});\r\n}\r\n\r\nfunction Plane(props) {\r\n\tconst [wood] = useLoader(TextureLoader, ['wood.jpg']);\r\n\r\n\tconst [ref] = usePlane(() => ({\r\n\t\trotation: [-Math.PI / 2, 0, 0],\r\n\t\t...props,\r\n\t}));\r\n\r\n\treturn (\r\n\t\t<mesh ref={ref} >\r\n\t\t\t<planeGeometry args={[30, 30]} />\r\n\t\t\t<meshStandardMaterial displacementScale={0.5} map={wood} />\r\n\t\t</mesh>\r\n\t);\r\n}\r\n\r\nconst MainPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<main className=\"home__main\">\r\n\t\t\t\t<Suspense fallback={null}>\r\n\t\t\t\t\t<Canvas>\r\n\t\t\t\t\t\t<Physics>\r\n\t\t\t\t\t\t\t<ambientLight intensity={0.1} />\r\n\t\t\t\t\t\t\t<pointLight position={[10, 10, 10]} />\r\n\t\t\t\t\t\t\t<Sphere position={[2, 5, -1]} />\r\n\t\t\t\t\t\t\t<Box position={[1, 2, -1]} />\r\n\t\t\t\t\t\t\t<Plane position={[1, -2, -1]} />\r\n\t\t\t\t\t\t\t<Rig />\r\n\t\t\t\t\t\t</Physics>\r\n\t\t\t\t\t</Canvas>\r\n\t\t\t\t</Suspense>\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["Box","props","useBox","mass","position","ref","useState","clicked","setClicked","useLoader","TextureLoader","wood","scale","onClick","displacementScale","map","Sphere","useSphere","Rig","useThree","camera","mouse","vec","Vector3","useFrame","lerp","set","x","y","z","lookAt","Plane","usePlane","rotation","Math","PI","args","className","Suspense","fallback","intensity"],"sourceRoot":""}